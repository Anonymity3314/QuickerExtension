<ResourceDictionary 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"        
>
    <!-- 自定义 ComboBoxItem 样式 -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="border">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#E6E6E6"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#D9D9D9"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 圆角 ComboBox 的样式 -->
    <!--<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid>
                                        <Border x:Name="border" Background="White" BorderBrush="#FFABADB3" BorderThickness="1" CornerRadius="4">
                                            <ContentPresenter
                                                Content="{Binding SelectedItem.Content, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" 
                                                VerticalAlignment="Center" 
                                                HorizontalAlignment="Left"
                                                Margin="10,0"/>
                                        </Border>
                                        <Path
                                            x:Name="arrow"
                                            Data="M0,0 L4,4 L8,0"
                                            Stroke="#FFABADB3"
                                            Width="10"
                                            Height="6"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Center"
                                            Margin="0,0,10,0"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            --><!-- 改变边框颜色 --><!--
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF5B5B5B"/>
                                            --><!-- 改变箭头颜色 --><!--
                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF5B5B5B"/>
                                        </Trigger>
                                        
                                        <Trigger Property="IsChecked" Value="True">
                                            --><!-- 改变边框颜色 --><!--
                                            <Setter Property="BorderBrush" TargetName="border" Value="#FF326CF3"/>
                                            --><!-- 改变箭头颜色 --><!--
                                            <Setter Property="Stroke" TargetName="arrow" Value="#FF326CF3"/>
                                            --><!-- 改变箭头方向 --><!--
                                            <Setter Property="Data" TargetName="arrow" Value="M0,4 L4,0 L8,4"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <Popup Name="Popup"
                               IsOpen="{Binding IsChecked, ElementName=ToggleButton, Mode=TwoWay}"
                               Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="Slide"
                               Focusable="False"
                               AllowsTransparency="True">
                            <Grid>
                                <Rectangle Fill="White" Margin="3">
                                    <Rectangle.Effect>
                                        <DropShadowEffect Color="#FFBBBBBB" Direction="0" BlurRadius="10" RenderingBias="Quality" ShadowDepth="1"/>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border Background="White" BorderThickness="0" CornerRadius="4" Margin="2">
                                    <Grid Margin="0,3">
                                        <ItemsPresenter/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
</ResourceDictionary>